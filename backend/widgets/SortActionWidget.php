<?php
namespace backend\widgets;

use backend\components\SortAction;
use yii\base\Widget;
use yii\helpers\Url;
use yii\web\View;

class SortActionWidget extends Widget
{
    const BUTTON_CLASS = 'btn-group-action';

    public $className;
    public $scenario = SortAction::SCENARIO_DEFAULT;
    public $order = SORT_ASC;

    public function init()
    {
        $this->view->registerJsFile('//code.jquery.com/ui/1.12.0/jquery-ui.min.js', ['depends' => [\yii\web\JqueryAsset::className()]]);
        parent::init(); // TODO: Change the autogenerated stub
    }

    public function run()
    {
        $url = Url::to(['/site/sort']);
        $this->view->registerJs('
            var fixHelperModified = function(e, tr) {
                var $originals = tr.children();
                var $helper = tr.clone();
                $helper.children().each(function(index) {
                    $(this).width($originals.eq(index).width())
                });
                return $helper;
            },
            update = function () {
                 var ids = [],
                 scenario = "'.$this->scenario.'",
                 order = "'.$this->order.'",
                 url = "'.$url.'";
                 className = "'.quotemeta($this->className).'",
                $(".grid-view .checkbox-item input[type=checkbox]").each(function(index) {
                    ids[index] = $(this).val();
                });
                var data = {
                    scenario: scenario,
                    className: className,
                    ids: ids,
                    order: order
                };
                
                 $.ajax({
                       method: "POST",
                       url: url,
                       data: {data:data},
                       dataType: "json",
                       success: function (data) {
                           if (data.status) {
                                  toastr[\'success\'](data[\'message\']);
                           }
                       }
                   });
            };
        
            $( "#content-list tbody" ).sortable({
                helper: fixHelperModified,
                handle: \'.sort-item\',
                axis: \'y\',
                update: update,
        
            });
        ',View::POS_READY);
    }
}