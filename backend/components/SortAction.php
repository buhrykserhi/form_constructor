<?php
namespace backend\components;

use yii\base\Action;
use yii\web\Response;

class SortAction extends Action
{
    const SCENARIO_DEFAULT = 1;
    const SCENARIO_PROPERTY = 2;

    public $className;
    public $scenario;
    public $ids;
    public $order = SORT_ASC;

    public function init()
    {
        $post = \Yii::$app->request->post('data');
        $this->className = $post['className'];
        $this->scenario = $post['scenario'];
        $this->ids = $post['ids'];
        if (isset($post['order'])) {
            $this->order = $post['order'];
        }

        parent::init(); // TODO: Change the autogenerated stub
    }

    public function run()
    {
        \Yii::$app->response->format = Response::FORMAT_JSON;

        $class = $this->className;

        switch ($this->scenario) {
            case self::SCENARIO_DEFAULT;
                $query = $class::find();
            break;
        }
        if ($this->order == SORT_DESC) {
            $this->sortDesc($query);
        } else {
            $this->sortAsc($query);
        }


        return ['status' => true, 'message' => 'Новое положение сохранено.'];
    }

    public function sortAsc($query)
    {
        $minQuery = clone $query;
        $min = $minQuery->where(['in', 'id', $this->ids])->min('position');
        $count = count($this->ids);
        foreach ($this->ids as $key => $value) {
            $model = $query->where(['id' => $value])->one();
            if ($model) {
                $model->position =  $min + $key;
                $model->save();
            }
        }
    }

    public function sortDesc($query)
    {
        $minQuery = clone $query;
        $min = $minQuery->where(['in', 'id', $this->ids])->min('position');
        $count = count($this->ids);
        foreach ($this->ids as $key => $value) {
            $model = $query->where(['id' => $value])->one();
            if ($model) {
                $model->position = ($min + $count) - $key;
                $model->save();
            }
        }
    }
}